/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

package userinterface.Police.Misconduct;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.CanteenOrganization;
import Business.Organization.MisconductOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Complaints_Suggestions_Request;
import Business.WorkQueue.EmergencyRequest;
import Business.WorkQueue.StatusRequest;
import java.awt.CardLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.Police.felony.FelonyWorkAreaJPanel;
import utility.Validate;

/**
 *
 * @author anamikabharali
 */
public class MisconductWorkAreaJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private MisconductOrganization misconductOrganization;
    private Enterprise enterprise;
    private Network network;
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    
    public MisconductWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise,EcoSystem business,Network network) {
        
        initComponents();
        this.network=network;
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.misconductOrganization = (MisconductOrganization)organization;
        this.enterprise= enterprise;
        populateTable();
        populateEmergencyTable();
        
    }
    
    public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel)workRequestJTable.getModel();
        model.setRowCount(0);
        for(StatusRequest request : misconductOrganization.getStatusQueue().getStatusRequestList()){
            if (request instanceof Complaints_Suggestions_Request) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getEmployee().getName();
            row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
            row[3] = request.getStatus();
            model.addRow(row);
            
        }
    }}
    
     public void populateEmergencyTable()
    {
    
            DefaultTableModel model = (DefaultTableModel)emergencytable.getModel();
        
        model.setRowCount(0);
        
        for(StatusRequest request : misconductOrganization.getStatusQueue().getStatusRequestList())
        {
            if (request instanceof EmergencyRequest) {
                        EmergencyRequest s = (EmergencyRequest) request;
                        Object[] row = new Object[1];
                        row[0] = s;
                         model.addRow(row);
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        assignJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        emergencytable = new javax.swing.JTable();
        senteam = new javax.swing.JButton();
        processJButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(76, 89, 115));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 550, 120));

        assignJButton.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        assignJButton.setText("Assign to me");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 130, -1));

        refreshJButton.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, 100, -1));

        jLabel2.setFont(new java.awt.Font("Optima", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Present misconduct alerts:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        emergencytable.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        emergencytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Location"
            }
        ));
        jScrollPane2.setViewportView(emergencytable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 430, 120));

        senteam.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        senteam.setText("Send Team");
        senteam.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        senteam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                senteamActionPerformed(evt);
            }
        });
        add(senteam, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 400, 90, -1));

        processJButton.setFont(new java.awt.Font("Optima", 0, 14)); // NOI18N
        processJButton.setText("Process");
        processJButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 120, -1));

        jLabel4.setFont(new java.awt.Font("Optima", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MISCONDUCT  ALERTS  MANAGEMENT");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        jLabel3.setFont(new java.awt.Font("Optima", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Emergency:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/anamikabharali/Downloads/imageedit_5_4363260202.jpg")); // NOI18N
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 110));
    }// </editor-fold>//GEN-END:initComponents

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        StatusRequest request = (StatusRequest)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getReceiver()!=null)
        {
            JOptionPane.showMessageDialog(null,"Request has been assigned already ");
        }
        else
        {

            if(request.getStatus()=="Completed")
            {
                JOptionPane.showMessageDialog(null,"Request has been completed already");
            }
            else
            request.setReceiver(userAccount);
            request.setStatus("Pending");

        }
        populateTable();

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void senteamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_senteamActionPerformed
        // TODO add your handling code here:

        int selectedRow = emergencytable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        EmergencyRequest request = (EmergencyRequest)emergencytable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        try {
            Validate.sendMessage(request.getEmail(),"A team will approach to your location immediately");
           
            JOptionPane.showMessageDialog(this,"Mail has been sent");
        } catch (MessagingException ex) {
            Logger.getLogger(FelonyWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Mail has not  been sent");
        }
        
    }//GEN-LAST:event_senteamActionPerformed

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();

        if (selectedRow < 0){
            return;
        }

        Complaints_Suggestions_Request request = (Complaints_Suggestions_Request)workRequestJTable.getValueAt(selectedRow, 0);
        if(request.getStatus()=="Completed")
        {
            JOptionPane.showMessageDialog(null,"Request has been completed already");

        }
        else if(request.getStatus()=="Sent"  || request.getStatus()==null)
        {
            JOptionPane.showMessageDialog(null,"Request has to be assigned first");
        }
        else
        {

            request.setStatus("Processing");

            MisconductProcessStatusRequestJPanel processWorkRequestJPanel = new MisconductProcessStatusRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
        
    }//GEN-LAST:event_processJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignJButton;
    private javax.swing.JTable emergencytable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton senteam;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
